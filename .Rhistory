update()
install.packages(c("boot", "foreign", "Matrix", "mgcv"))
library(RODBC)
library(RODBC)
db_path = "C:/Users/bjr21/Documents/GitHub/DunnEES/PastSurveyNumbersDB.accdb"
odbcConnectAccess(db_path)
#Import packages
library(readxl)
library(broom)
library(tibble)
library(xlsx)
library(ggplot2)
library(reshape2)
#Import packages
library(readxl)
library(broom)
library(tibble)
library(ggplot2)
library(reshape2)
#set directory to GitHub repo
setwd("C:/Users/bjr21/Documents/GitHub/DunnEES")
#set number of years
years <- c("2015","2016","2017")
#Import file
df_2017 <- read_excel("2017EESStatsData.xlsx", sheet=1)
df_2016 <- read_excel("2016EESStats.xlsx", sheet=4)
df_2015 <- read_excel("2015EESStats.xlsx", sheet=2)
#Clean & combine
keeps_2017 <- c("SurveyYear", "Sex", "Race", "Tenure", "Union", "Agency", "RetentionComp", "TalentComp", "EnviroComp", "EvalComp", "CustomerComp", "UnitComp", "SuperComp", "LeaderComp", "StateComp")
comps_2017 <- df_2017[keeps_2017]
comps_2017 <- comps_2017[rowSums(is.na(comps_2017))!=ncol(comps_2017), ]
names(df_2016)[2] <- "Sex"
names(df_2016)[3] <- "Race"
names(df_2016)[4] <- "OtherRace"
names(df_2016)[5] <- "Tenure"
names(df_2016)[6] <- "Union"
names(df_2016)[7] <- "Agency"
names(df_2016)[8] <- "OtherAgency"
names(df_2016)[130] <- "RetentionComp"
names(df_2016)[135] <- "TalentComp"
names(df_2016)[144] <- "EnviroComp"
names(df_2016)[153] <- "EvalComp"
names(df_2016)[159] <- "CustomerComp"
names(df_2016)[166] <- "UnitComp"
names(df_2016)[173] <- "SuperComp"
names(df_2016)[181] <- "LeaderComp"
names(df_2016)[182] <- "StateComp"
keeps_2016 <- c("SurveyYear", "Sex", "Race", "Tenure", "Union", "Agency", "RetentionComp", "TalentComp", "EnviroComp", "EvalComp", "CustomerComp", "UnitComp", "SuperComp", "LeaderComp", "StateComp")
comps_2016 <- df_2016[keeps_2016]
comps_2016 <- comps_2016[rowSums(is.na(comps_2016))!=ncol(comps_2016), ]
names(df_2015)[2] <- "Sex"
names(df_2015)[3] <- "Race"
names(df_2015)[4] <- "Tenure"
names(df_2015)[6] <- "Union"
names(df_2015)[7] <- "Agency"
names(df_2015)[126] <- "RetentionComp"
names(df_2015)[131] <- "TalentComp"
names(df_2015)[140] <- "EnviroComp"
names(df_2015)[149] <- "EvalComp"
names(df_2015)[155] <- "CustomerComp"
names(df_2015)[162] <- "UnitComp"
names(df_2015)[169] <- "SuperComp"
names(df_2015)[177] <- "LeaderComp"
names(df_2015)[179] <- "StateComp"
keeps_2015 <- c("SurveyYear", "Sex", "Race", "Tenure", "Union", "Agency", "RetentionComp", "TalentComp", "EnviroComp", "EvalComp", "CustomerComp", "UnitComp", "SuperComp", "LeaderComp", "StateComp")
comps_2015 <- df_2015[keeps_2015]
comps_2015 <- comps_2015[rowSums(is.na(comps_2015))!=ncol(comps_2015), ]
fullset <- rbind(comps_2015, comps_2016, comps_2017)
fullset$Sex <- factor(fullset$Sex)
fullset$Race <- factor(fullset$Race)
fullset$Tenure <- factor(fullset$Tenure)
fullset$Union <- factor(fullset$Union)
fullset$Agency <- factor(fullset$Agency)
#Calculate aggregate statistics
fullsetm <- melt(data=fullset, id.vars = c("SurveyYear", "Sex", "Race", "Tenure", "Union", "Agency"))
aggtest <- dcast(fullsetm, SurveyYear + variable ~ ., mean, na.rm=TRUE)
aggtest2 <- dcast(fullsetm, SurveyYear + variable ~ ., sd, na.rm=TRUE)
View(aggtest)
View(aggtest2)
fullmean <- dcast(fullsetm, SurveyYear + variable ~ ., mean, na.rm=TRUE)
fullsd <- dcast(fullsetm, SurveyYear + variable ~ ., sd, na.rm=TRUE)
names(fullmean)[3] <- "Mean"
names(fullsd)[3] <- "SD"
test <- cbind(fullmean,fullsd)
View(test)
test <- cbind(fullmean,fullsd$SD)
SOI_results<- cbind(fullmean,fullsd$SD)
names(SOI_results)[4] <- "SD"
# Default bar plot
p_SOI_results<- ggplot(SOI_results, aes(x=variable, y=Mean, fill=SurveyYear)) +
geom_bar(stat="identity", color="black",
position=position_dodge()) +
geom_errorbar(aes(ymin=len-2*sd, ymax=len+2*sd), width=.2,
position=position_dodge(.9))
print(p)
print(p_SOI_results)
# Default bar plot
p_SOI_results<- ggplot(SOI_results, aes(x=variable, y=Mean, fill=SurveyYear)) +
geom_bar(stat="identity", color="black",
position=position_dodge()) +
geom_errorbar(aes(ymin=mean-2*sd, ymax=mean+2*sd), width=.2,
position=position_dodge(.9))
print(p_SOI_results)
# Default bar plot
p_SOI_results<- ggplot(SOI_results, aes(x=variable, y=Mean, fill=SurveyYear)) +
geom_bar(stat="identity", color="black",
position=position_dodge()) +
geom_errorbar(aes(ymin=mean-*sd, ymax=mean+*sd), width=.2,
position=position_dodge(.9))
print(p_SOI_results)
# Default bar plot
p_SOI_results<- ggplot(SOI_results, aes(x=variable, y=Mean, fill=SurveyYear)) +
geom_bar(stat="identity", color="black",
position=position_dodge()) +
geom_errorbar(aes(ymin=mean-sd, ymax=mean+sd), width=.2,
position=position_dodge(.9))
print(p_SOI_results)
# Default bar plot
p_SOI_results<- ggplot(SOI_results, aes(x=variable, y=Mean, fill=SurveyYear)) +
geom_bar(stat="identity", color="black",
position=position_dodge())
print(p_SOI_results)
fullset$SurveyYear.f <- factor(fullset$SurveyYear)
#Calculate aggregate statistics
fullsetm <- melt(data=fullset, id.vars = c("SurveyYear", "SurveyYear.f", "Sex", "Race", "Tenure", "Union", "Agency"))
fullmean <- dcast(fullsetm, SurveyYear.f + variable ~ ., mean, na.rm=TRUE)
fullsd <- dcast(fullsetm, SurveyYear.f + variable ~ ., sd, na.rm=TRUE)
names(fullmean)[3] <- "Mean"
names(fullsd)[3] <- "SD"
SOI_results<- cbind(fullmean,fullsd$SD)
names(SOI_results)[4] <- "SD"
# Default bar plot
p_SOI_results<- ggplot(SOI_results, aes(x=variable, y=Mean, fill=SurveyYear)) +
geom_bar(stat="identity", color="black",
position=position_dodge())
print(p_SOI_results)
# Default bar plot
p_SOI_results<- ggplot(SOI_results, aes(x=variable, y=Mean, fill=SurveyYear.f)) +
geom_bar(stat="identity", color="black",
position=position_dodge())
print(p_SOI_results)
na.omit(SOI_results)
# Default bar plot
p_SOI_results<- ggplot(SOI_results, aes(x=variable, y=Mean, fill=SurveyYear.f)) +
geom_bar(stat="identity", color="black",
position=position_dodge())
print(p_SOI_results)
SOI_results <- na.omit(SOI_results)
# Default bar plot
p_SOI_results<- ggplot(SOI_results, aes(x=variable, y=Mean, fill=SurveyYear.f)) +
geom_bar(stat="identity", color="black",
position=position_dodge())
print(p_SOI_results)
# Default bar plot
p_SOI_results<- ggplot(SOI_results, aes(x=variable, y=Mean, fill=SurveyYear.f)) +
geom_bar(stat="identity", color="black")
print(p_SOI_results)
,
position=position_dodge()
# Default bar plot
p_SOI_results<- ggplot(SOI_results, aes(x=variable, y=Mean, fill=SurveyYear.f)) +
geom_bar(stat="identity", color="black",
position=position_dodge())
print(p_SOI_results)
# Default bar plot
p_SOI_results<- ggplot(SOI_results[1:8], aes(x=variable, y=Mean, fill=SurveyYear.f)) +
geom_bar(stat="identity", color="black",
position=position_dodge())
# Default bar plot
p_SOI_results<- ggplot(SOI_results[,1:8], aes(x=variable, y=Mean, fill=SurveyYear.f)) +
geom_bar(stat="identity", color="black",
position=position_dodge())
SOI_results[1:8]
SOI_results(1:8)
View(SOI_results)
?subset
SOI_subset_only <-subset(SOI_results, variable!="StateComp")
View(SOI_subset_only)
# Default bar plot
p_SOI_subset_only<- ggplot(SOI_subset_only, aes(x=variable, y=Mean, fill=SurveyYear.f)) +
geom_bar(stat="identity", color="black",
position=position_dodge())
print(p_SOI_subset_only)
# Finished bar plot
p_SOI_results+labs(title="State Average", x="Survey Focus", y = "Average Composite Score")+
theme_classic())
# Finished bar plot
p_SOI_results+labs(title="State Average", x="Survey Focus", y = "Average Composite Score")+
theme_classic()
# Default bar plot
p_SOI_subset_only<- ggplot(SOI_subset_only, aes(x=variable, y=Mean, fill=SurveyYear.f)) +
geom_bar(stat="identity", color="black",
position=position_dodge())
print(p_SOI_subset_only)
# Finished bar plot
p_SOI_results+labs(title="State Average", x="Survey Focus", y = "Average Composite Score")
# Finished bar plot
p_SOI_results+labs(title="State Average", x="Survey Focus", y = "Average Composite Score")+theme_minimal()
# Finished bar plot
p_SOI_results+labs(title="State Average", x="Survey Focus", y = "Average Composite Score")+theme_classic()
print(p_SOI_subset_only)
# Finished bar plot
p_SOI_results+labs(title="State Average", x="Survey Focus", y = "Average Composite Score")+theme_minimal()
# Finished bar plot
p_SOI_subset_only+labs(title="State Average", x="Survey Focus", y = "Average Composite Score")+theme_minimal()
# Finished bar plot
p_SOI_subset_only+labs(title="State Average", x="Survey Focus", y = "Average Composite Score")+theme_minimal()+scale_fill_discrete(name = "New Legend Title")
# Finished bar plot
p_SOI_subset_only+labs(title="State Average", x="Survey Focus", y = "Average Composite Score")+theme_minimal()+scale_fill_discrete(name = "Survey Year")
# Default bar plot
p_SOI_subset_only<- ggplot(SOI_subset_only, aes(x=variable, y=Mean, fill=SurveyYear.f)) +
geom_bar(stat="identity", color="black",
position=position_dodge()) +
geom_errorbar(aes(ymin=Mean-SD, ymax=Mean+SD), width=.2,
position=position_dodge(.9))
print(p_SOI_subset_only)
# Finished bar plot
p_SOI_subset_only+labs(title="State Average", x="Survey Focus", y = "Average Composite Score")+theme_minimal()+scale_fill_discrete(name = "Survey Year")
# Default bar plot
p_SOI_subset_only<- ggplot(SOI_subset_only, aes(x=variable, y=Mean, fill=SurveyYear.f)) +
geom_bar(stat="identity", color="black",
position=position_dodge()) +
geom_errorbar(aes(ymin=Mean-2*SD, ymax=Mean+2*SD), width=.2,
position=position_dodge(.9))
print(p_SOI_subset_only)
# Finished bar plot
p_SOI_subset_only+labs(title="State Average", x="Survey Focus", y = "Average Composite Score")+theme_minimal()+scale_fill_discrete(name = "Survey Year")
# Finished bar plot
p_SOI_subset_only+labs(title="Survey Section Composite Scores, Mean & 95% Confidence interval", x="Survey Focus", y = "Average Composite Score")+theme_minimal()+scale_fill_discrete(name = "Survey Year")
View(SOI_subset_only)
# Finished bar plot
p_SOI_subset_only+labs(title="Survey Section Composite Scores, Mean & 95% Confidence Interval", x="Survey Focus", y = "Average Composite Score")+theme_minimal()+scale_fill_discrete(name = "Survey Year") + scale_x_discrete(labels=c("Retention", "Talent Development", "Work Environment", "Performance Evaluation", "Customer Service", "Work Unit", "Supervisor", "Leadership"))
# Default bar plot
p_SOI_subset_only<- ggplot(SOI_subset_only, aes(x=variable, y=Mean, fill=SurveyYear.f)) +
geom_bar(stat="identity", color="black",
position=position_dodge()) +
geom_errorbar(aes(ymin=Mean-2*SD, ymax=Mean+2*SD), width=.2,
position=position_dodge(.9)) +
coord_flip()
print(p_SOI_subset_only)
# Finished bar plot
p_SOI_subset_only+labs(title="Survey Section Composite Scores, Mean & 95% Confidence Interval", x="Survey Focus", y = "Average Composite Score")+theme_minimal()+scale_fill_discrete(name = "Survey Year") + scale_x_discrete(labels=c("Retention", "Talent Development", "Work Environment", "Performance Evaluation", "Customer Service", "Work Unit", "Supervisor", "Leadership"))
source('~/GitHub/DunnEES/AgencyTrends.R', echo=TRUE)
# Default bar plot
p_SOI_subset_only<- ggplot(SOI_subset_only, aes(x=variable, y=Mean, fill=SurveyYear.f)) +
geom_bar(stat="identity", color="black",
position=position_dodge()) +
geom_errorbar(aes(ymin=Mean-2*SD, ymax=Mean+2*SD), width=.2,
position=position_dodge(.9)) +
theme(axis.text.x=element_text(angle=30, hjust=1))
print(p_SOI_subset_only)
# Finished bar plot
p_SOI_subset_only+labs(title="Survey Section Composite Scores, Mean & 95% Confidence Interval", x="Survey Focus", y = "Average Composite Score")+theme_minimal()+scale_fill_discrete(name = "Survey Year") + scale_x_discrete(labels=c("Retention", "Talent Development", "Work Environment", "Performance Evaluation", "Customer Service", "Work Unit", "Supervisor", "Leadership"))
# Finished bar plot
p_SOI_subset_only+labs(title="Survey Section Composite Scores, Mean & 95% Confidence Interval", x="Survey Focus", y = "Average Composite Score")+theme_minimal()+scale_fill_discrete(name = "Survey Year") + scale_x_discrete(labels=c("Retention", "Talent Development", "Work Environment", "Performance Evaluation", "Customer Service", "Work Unit", "Supervisor", "Leadership"))  +
theme(axis.text.x=element_text(angle=30, hjust=1))
fullt-test <- dcast(fullsetm, SurveyYear.f + variable ~ ., t.test, na.rm=TRUE)
fullset_2017 = subset(fullset,SurveyYear.f=2017)
fullset_2015 = subset(fullset,SurveyYear.f=2015)
fullset_2016 = subset(fullset,SurveyYear.f=2016)
t.test(fullset_2015, fullset_2017)
View(fullset_2017)
t.test(fullset_2015[7], fullset_2017[7])
t.test(fullset_2015[,7], fullset_2017[,])
sur2015 = subset(fullset,SurveyYear.f=2015)
sur2016 = subset(fullset,SurveyYear.f=2016)
sur2017 = subset(fullset,SurveyYear.f=2017)
sur2015[,7]
t.test(sur2015[,7])
sur2015[,7]
sur2015[[7]
sur2015[[7]]
sur2015[[7]]
t.test(sur2015[[7]])
t.test(sur2015[[7]], sur2017[[7]])
View(sur2015)
View(sur2016)
View(sur2017)
?subset
sur2015 = subset(fullset,SurveyYear.f==2015)
sur2016 = subset(fullset,SurveyYear.f==2016)
sur2017 = subset(fullset,SurveyYear.f==2017)
t.test(sur2015[[7]], sur2017[[7]])
tempvar = t.test(sur2015[[7]], sur2017[[7]])
View(tempvar)
tempvar
tempvar[1]
tempvar[12]
tempvar[2]
tempvar[3]
tempvar[4]
tempvar[5]
tempvar[5][1]
tempvar$estimate
tempvar$estimate[1]
tempvar$estimate[1,1]
tempvar$estimate[2]
tempvar$estimate[2]+1
mean_2017<-tempvar$estimate[2]
mean_2017
plot(mean_2017)
(tempvar$estimate[2]-tempvar$estimate[1])/tempvar$estimate[1]
sapply(fullset[,7:16], function(i) t.test(i ~ fullset$SurveyYear))
del15_17 = subset(fullset,SurveyYear.f==2015 | SurveyYear.f==2017)
View(del15_17)
del16_17 = subset(fullset,SurveyYear.f==2016 | SurveyYear.f==2017)
sapply(del15_17[,7:16], function(i) t.test(i ~ fullset$SurveyYear))
sapply(del15_17[,7:16], function(i) t.test(i ~ del15_17$SurveyYear))
View(del15_17)
lapply(del15_17[,7:16], function(i) t.test(i ~ del15_17$SurveyYear.f))
lapply(del15_17, function(i) t.test(i ~ del15_17$SurveyYear.f))
lapply(del15_17[,7], function(i) t.test(i ~ del15_17$SurveyYear.f))
lapply(del15_17[,7:8], function(i) t.test(i ~ del15_17$SurveyYear.f))
sapply(del15_17[,7:15], function(i) t.test(i ~ del15_17$SurveyYear.f))
lapply(del15_17[,7:15], function(i) t.test(i ~ del15_17$SurveyYear.f))
sapply(del15_17[,7:15], function(i) t.test(i ~ del15_17$SurveyYear.f))
# Perform t-test
#use Welch's two-sided test to control for unequal sample sizes
delfull = subset(fullset,SurveyYear.f==2015 | SurveyYear.f==2017) #delta between start of survey and most recent year
delrecent = subset(fullset,SurveyYear.f==2016 | SurveyYear.f==2017) #delta between last two runs of the survey
full_ttest <- sapply(delfull[,7:15], function(i) t.test(i ~ delfull$SurveyYear.f))
recent_ttest <- sapply(delrecent[,7:15], function(i) t.test(i ~ delrecent$SurveyYear.f))
View(full_ttest)
full_ttest$RetentionComp
full_ttest[RetentionComp]
full_ttest["RetentionComp"]
full_ttest
full_ttest["statistic"]
full_ttest[1]
full_ttest$p.value
full_ttest$p.value[1]
full_ttest$p.value[2]
full_ttest$RetentionComp
names(full_tttest)
names(full_ttest)
full_ttest
full_ttest[[72]]''
full_ttest[[72]]
full_ttest <- lapply(delfull[,7:15], function(i) t.test(i ~ delfull$SurveyYear.f))
View(full_ttest)
full_ttest
full_ttest$RetentionComp
full_ttest$RetentionComp[1]
full_ttest$RetentionComp$p.value
full_ttest <- lapply(delfull[,7:15], function(i) t.test(i ~ delfull$SurveyYear.f))
recent_ttest <- lapply(delrecent[,7:15], function(i) t.test(i ~ delrecent$SurveyYear.f))
full_ttest$RetentionComp[1]
full_ttest$RetentionComp[2]
full_ttest$RetentionComp[23]
full_ttest$RetentionComp[3]
full_ttest$RetentionComp[4]
full_ttest$RetentionComp[5]
View(SOI_results)
View(SOI_subset_only)
data.frame(c("A","B","C","D"), c(1,-2,2,-1))
data.frame(c("A","B","C","D"), c(1,-2,2,-1), names=c("Let", "Num"))
data.frame(c("A","B","C","D"), c(1,-2,2,-1), names("Let", "Num"))
data.frame(c("A","B","C","D"), c(1,-2,2,-1), names(c("Let", "Num"))
data.frame(c("A","B","C","D"), c(1,-2,2,-1), names(c("Let", "Num")))
?data.frame
data.frame(c("A","B","C","D"), c(1,-2,2,-1), row.names=c("Let", "Num")))
data.frame(c("A","B","C","D"), c(1,-2,2,-1), row.names=c("Let", "Num"))
data.frame(c("A","B","C","D"), c(1,-2,2,-1), row.names="Let", "Num")
data.frame(c("A","B","C","D"), c(1,-2,2,-1), row.names=c("Let", "Num"))
data.frame(c("A",1),c("C",-1), row.names=c("Let", "Num"))
data.frame(c("A","B","C","D"), c(1,-2,2,-1), col.names=c("Let", "Num"))
data.frame(c("A","B","C","D"), c(1,-2,2,-1))
thing <- data.frame(c("A","B","C","D"), c(1,-2,2,-1))
names(thing) <- c("let", "num")
thing
ggplot(thing,aes(x=let, y=num)+
geom_bar()
thing
+ geom_bar()
ggplot(thing,aes(x=let, y=num)+
+ geom_bar())
print(ggplot(thing,aes(x=let, y=num)+
+ geom_bar()))
print(ggplot(thing,aes(x=let, y=num)+
geom_bar()))
print(ggplot(thing,aes(x=let, y=num)+
geom_bar(color="black")))
